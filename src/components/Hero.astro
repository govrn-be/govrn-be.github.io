---
import { Image } from 'astro:assets';
import applicationHomePageImg from '../assets/images/application-home-page.png';
import g2Logo from '../assets/G2_logo.jpg';
import VideoModal from './VideoModal.astro';

interface HeroProps {
  imageValues?: {
    title: string;
    description: string;
    position: string;
  }[];
  badgeText?: string;
  heading?: {
    main: string;
    highlight: string;
  };
  description?: string;
  ctaButtons?: {
    primary: {
      text: string;
      href: string;
    };
    secondary: {
      text: string;
    };
  };
  securityFeatures?: {
    title: string;
    subtitle: string;
  }[];
  imageAlt?: string;
  imageSrc?: string;
}

const {
  imageValues = [
    {
      title: "AI-Powered",
      description: "Transform board data into actionable insights with our advanced AI engine",
      position: "top-1/4 left-2/3"
    },
    {
      title: "Secure", 
      description: "Enterprise-grade security with end-to-end encryption and compliance features",
      position: "bottom-1/3 right-10"
    },
    {
      title: "Collaborative",
      description: "Real-time collaboration tools for seamless board communication", 
      position: "bottom-1/4 left-1/3"
    }
  ],
  badgeText = "AI-Powered Board Management",
  heading = {
    main: "The AI-First Board Platform to Power Your",
    highlight: "Best Decisions"
  },
  description = "Govrn equips your board to make swift, informed decisions with ease. Our AI platform enhances collaboration, ensures compliance, and drives long-term growth and success.",
  ctaButtons = {
    primary: {
      text: "Request Demo",
      href: "/request-demo"
    },
    secondary: {
      text: "Watch Video"
    }
  },
  securityFeatures = [
    {
      title: "GDPR",
      subtitle: "Compliant"
    },
    {
      title: "256-bit",
      subtitle: "Encryption"  
    },
    {
      title: "Multi-Factor",
      subtitle: "Authentication"
    }
  ],
  imageAlt = "Govrn Board Management Software Interface",
  imageSrc = applicationHomePageImg
} = Astro.props;
---

<section class="relative bg-gradient-to-br from-white to-gray-50 pt-32 pb-24 overflow-hidden">
  <div class="absolute inset-0 z-0">
    <div class="absolute inset-0 bg-[radial-gradient(circle_at_top_right,rgba(57,153,222,0.1),transparent_50%)]"></div>
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <div class="lg:grid lg:grid-cols-2 lg:gap-12 items-center">
      <!-- Left Column - Content -->
      <div class="lg:pr-2">
        <div class="inline-flex items-center rounded-full px-4 py-1 text-sm font-medium bg-primary/10 text-primary mb-8">
          <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
          </svg>
          {badgeText}
        </div>

        <h1 class="text-5xl lg:text-6xl font-extrabold text-gray-900 tracking-tight leading-tight">
          <span>{heading.main} <span class="bg-clip-text text-transparent bg-gradient-to-r from-primary to-blue-600">{heading.highlight}</span></span>
        </h1>

        <p class="mt-8 text-xl text-gray-600 leading-relaxed">
          {description}
        </p>

        <div class="mt-10 flex flex-col sm:flex-row gap-4">
          <a href={ctaButtons.primary.href} class="inline-flex items-center justify-center px-8 py-4 text-lg font-medium rounded-xl text-white bg-primary hover:bg-primary/90 shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-200">
            {ctaButtons.primary.text}
            <svg class="ml-2 -mr-1 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
            </svg>
          </a>
          <button
            onclick="openVideoModal()"
            class="inline-flex items-center justify-center px-8 py-4 text-lg font-medium rounded-xl text-primary bg-white border-2 border-primary/20 hover:border-primary/40 hover:bg-primary/5 transition-colors duration-200"
          >
            {ctaButtons.secondary.text}
            <svg class="ml-2 -mr-1 w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path d="M10 0a10 10 0 100 20 10 10 0 000-20zm3.5 10.5l-5 3a.5.5 0 01-.75-.4v-6a.5.5 0 01.75-.4l5 3a.5.5 0 010 .8z" />
            </svg>
          </button>
        </div>

        <div class="mt-12 grid grid-cols-3 gap-6">
          {securityFeatures.map(feature => (
            <div class="flex items-center space-x-2">
              <div class="flex-shrink-0 w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center">
                <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                </svg>
              </div>
              <div class="text-sm">
                <div class="font-medium text-gray-900">{feature.title}</div>
                <div class="text-gray-500">{feature.subtitle}</div>
              </div>
            </div>
          ))}
        </div>

        <!-- G2 Rating -->
        <a
          href="https://www.g2.com/products/govrn/reviews"
          target="_blank"
          rel="noopener noreferrer"
          class="mt-8 inline-flex items-center bg-white rounded-2xl px-6 py-4 shadow-lg border border-gray-100 hover:shadow-xl hover:scale-105 transition-all duration-300 group cursor-pointer"
        >
          <div class="flex items-center space-x-4">
            <div class="flex-shrink-0">
              <Image
                src={g2Logo}
                alt="G2 Logo"
                width={48}
                height={48}
                class="rounded-full group-hover:scale-110 transition-transform duration-300"
              />
            </div>
            <div class="border-l border-gray-200 pl-4">
              <div class="flex items-center space-x-2">
                <div class="flex items-center space-x-1">
                  {[...Array(5)].map((_, i) => (
                    <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                    </svg>
                  ))}
                  <span class="ml-2 text-2xl font-bold text-gray-900">4.8</span>
                </div>
              </div>
              <div class="text-sm text-gray-600 mt-1 group-hover:text-primary transition-colors duration-300">
                Not√© sur G2 par nos clients
                <svg class="inline-block w-3 h-3 ml-1 opacity-0 group-hover:opacity-100 transition-opacity duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                </svg>
              </div>
            </div>
          </div>
        </a>
      </div>

      <!-- Right Column - Image -->
      <div class="mt-12 lg:mt-0 relative">
        <div class="absolute inset-0 bg-gradient-to-tr from-primary/20 to-transparent rounded-3xl transform rotate-3"></div>
        <div class="absolute inset-0 bg-gradient-to-bl from-blue-600/20 to-transparent rounded-3xl transform -rotate-3"></div>
        <div class="relative">
          <Image 
            loading="eager"
            class="w-full h-auto rounded-2xl shadow-2xl transform transition-transform duration-300 hover:scale-[1.02]"
            src={imageSrc}
            alt={imageAlt}
            width={800}
            height={600}
            quality={90}
          />
          <div class="absolute inset-0 rounded-2xl ring-1 ring-inset ring-gray-900/10"></div>
          
          <!-- Animated Dots -->
          {imageValues.map(value => (
            <div class={`absolute ${value.position} z-10`}>
              <div class="relative group">
                <div class="w-6 h-6 bg-primary rounded-full cursor-pointer animate-pulse group-hover:animate-none group-hover:scale-110 transition-transform"></div>
                
                <!-- Hover Card -->
                <div class="absolute bottom-full left-1/2 -translate-x-1/2 mb-4 w-64 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 transform group-hover:-translate-y-2">
                  <div class="bg-white rounded-xl p-4 shadow-xl border border-gray-100">
                    <h2 class="text-lg font-semibold text-gray-900 mb-2">{value.title}</h3>
                    <p class="text-sm text-gray-600">{value.description}</p>
                  </div>
                  <!-- Arrow -->
                  <div class="absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-1/2 w-4 h-4 bg-white transform rotate-45 border-r border-b border-gray-100"></div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>

  <VideoModal videoId="mgr62dXb2QM" />
</section>