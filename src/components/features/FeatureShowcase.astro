---
import DocumentFlow from '../animations/DocumentFlow.astro';
import TaskTimeline, { type TaskTimelineProps } from '../animations/TaskTimeline.astro';
import FeatureHighlight from '../animations/FeatureHighlight.astro';

interface Props {
  texts?: {
    badge: string;
    title: string;
    subtitle: string;
    keyBenefits: string;
  };
  outcomes?: {
    title: string;
    description: string;
    component: any;
    componentProps?: any;
    stats: {
      value: string;
      label: string;
    }[];
    benefits: string[];
    link?: {
      text: string;
      url: string;
    }
  }[];
}

const {
  texts = {
    badge: "Measurable Results",
    title: "Transform Your Board's Performance", 
    subtitle: "See the real impact Govrn brings to your board operations with measurable improvements in efficiency, insight, and governance.",
    keyBenefits: "Key Benefits:"
  },
  outcomes= [
    {
      title: "Document Centralization",
      description:
        "A secure platform for all your documents, accessible anywhere and anytime - regardless of your technical skills.",
      component: DocumentFlow,
      stats: [
        { value: "100%", label: "Centralized documents" },
        { value: "24/7", label: "Secure access" },
      ],
      benefits: [
        "Central information source",
        "Intelligent classification",
        "Version control",
        "Flexible access control",
      ],
    },
    {
      title: "Data-driven Decision Making",
      description:
        "Transform your documents into actionable insights with our advanced AI, for faster and better-informed strategic decisions.",
      component: TaskTimeline,
      stats: [
        { value: "45%", label: "Decision quality" },
        { value: "24/7", label: "AI analysis" },
      ],
      benefits: [
        "Predictive analytics",
        "Strategic recommendations",
        "Market monitoring",
        "Performance monitoring",
      ],
      link: {
        text: "Discover our AI",
        url: "/features/ai-assistant",
      },
    },
    {
      title: "Compliance & Governance",
      description:
        "Govern your board with customized governance tools, including electronic signature and automated compliance checks.",
      component: FeatureHighlight,
      stats: [
        { value: "100%", label: "Compliance" },
        { value: "40%", label: "Administrative time savings" },
      ],
      benefits: [
        "Automated checks",
        "Electronic signature",
        "Rights management",
        "Audit trail",
      ],
    },
  ],
} = Astro.props;
---

<section class="py-24 bg-gradient-to-br from-gray-50 to-white relative overflow-hidden">
  <div class="absolute inset-0 bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] [background-size:16px_16px] opacity-20"></div>
  
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative">
    <div class="text-center max-w-3xl mx-auto mb-20">
      <div class="inline-flex items-center rounded-full px-6 py-2 text-sm font-medium bg-primary/10 text-primary mb-6">
        {texts.badge}
      </div>
      <h2 class="text-4xl font-bold text-gray-900 mb-6">{texts.title}</h2>
      <p class="text-xl text-gray-600">
        {texts.subtitle}
      </p>
    </div>

    <div class="space-y-32">
      {outcomes.map((outcome, index) => (
        <div class={`grid lg:grid-cols-2 gap-16 items-center ${index % 2 === 1 ? 'lg:grid-flow-dense' : ''}`}>
          <div class={index % 2 === 1 ? 'lg:col-start-2' : ''}>
            <h3 class="text-3xl font-bold text-gray-900 mb-6">{outcome.title}</h3>
            <p class="text-xl text-gray-600 mb-8 leading-relaxed">{outcome.description}</p>
            
            <div class="grid grid-cols-2 gap-8 mb-8">
              {outcome.stats.map(stat => (
                <div class="bg-white rounded-xl p-6 shadow-sm border border-gray-100">
                  <div class="text-3xl font-bold text-primary mb-2">{stat.value}</div>
                  <div class="text-gray-600">{stat.label}</div>
                </div>
              ))}
            </div>

            <div class="bg-white rounded-xl p-8 shadow-sm border border-gray-100">
              <h4 class="font-semibold text-gray-900 mb-4">{texts.keyBenefits}</h4>
              <ul class="grid grid-cols-2 gap-4">
                {outcome.benefits.map(benefit => (
                  <li class="flex items-center">
                    <svg class="h-5 w-5 text-primary mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                    <span class="text-gray-600">{benefit}</span>
                  </li>
                ))}
              </ul>
            </div>

            {outcome.link && (
              <div class="mt-8">
                <a
                  href={outcome.link.url}
                  class="inline-flex items-center px-6 py-3 text-base font-medium rounded-lg text-white bg-primary hover:bg-primary/90 shadow-lg hover:shadow-xl transition-all duration-300 group"
                >
                  {outcome.link.text}
                  <svg class="ml-2 w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                  </svg>
                </a>
              </div>
            )}
          </div>

          <div class={index % 2 === 1 ? 'lg:col-start-1' : ''}>
            <div class="relative group">
              <!-- Background gradients -->
              <div class="absolute inset-0 bg-gradient-to-br from-gray-100 to-white rounded-2xl"></div>
              <div class="absolute inset-0 bg-gradient-to-r from-primary to-blue-600 opacity-10 group-hover:opacity-20 transition-opacity duration-300 rounded-2xl"></div>
              
              <!-- Animation container -->
              <div class="relative rounded-2xl p-8 backdrop-blur-sm h-[400px]">
                <outcome.component {...outcome.componentProps} />
              </div>
              <div class="absolute inset-0 bg-[radial-gradient(#e5e7eb_1px,transparent_1px)] [background-size:16px_16px] opacity-30"></div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>