---
import { Image } from "astro:assets";
import MegaMenu from "./navigation/MegaMenu.astro";

const { transparent = false, hideMenu = false, whiteLogo = false, currentLang = 'en' } = Astro.props;
const buttonTexts = currentLang === 'fr' ? {
  signIn: "Se connecter",
  tryForFree: "Essayer gratuitement",
  tryPath: "/fr/try"
} : currentLang === 'nl' ? {
  signIn: "Inloggen", 
  tryForFree: "Gratis proberen",
  tryPath: "/nl/try"
} : {
  signIn: "Sign In",
  tryForFree: "Try for Free",
  tryPath: "/try"
};

const navItems = currentLang === 'fr' ? [
  {
    label: "Fonctionnalités",
    href: "/fr/features",
  },
  {
    label: "Cas d'usage",
    hasMegaMenu: true,
  },
  { label: "Tarifs", href: "/fr/pricing" },
  { label: "Témoignages", href: "/fr/testimonials" },
  { label: "Ressources", href: "/fr/resources" },
  { label: "À propos", href: "/fr/about" },
] : currentLang === 'nl' ? [
  {
    label: "Functies",
    href: "/nl/features",
  },
  {
    label: "Gebruiksscenario's",
    hasMegaMenu: true,
  },
  { label: "Prijzen", href: "/nl/pricing" },
  { label: "Getuigenissen", href: "/nl/testimonials" },
  { label: "Kennisbank", href: "/nl/resources" },
  { label: "Over ons", href: "/nl/about" },
] : [
  {
    label: "Features",
    href: "/features",
  },
  {
    label: "Use Cases",
    hasMegaMenu: true,
  },
  { label: "Pricing", href: "/pricing" },
  { label: "Testimonials", href: "/testimonials" },
  { label: "Resources", href: "/resources" },
  { label: "About", href: "/about" },
];

interface Props {
  transparent?: boolean;
  hideMenu?: boolean;
  whiteLogo?: boolean;
  currentLang?: 'en' | 'fr' | 'nl';
}
---

<header
  class={`fixed w-full z-50 transition-all duration-300
    ${transparent 
      ? 'bg-transparent border-transparent' 
      : 'bg-white/95 backdrop-blur-sm border-b border-gray-100'
    }
  `}
  data-current-lang={currentLang}
>
  <!-- Live Governance Summit Banner -->
  <div class="hidden md:block bg-gradient-to-r from-primary to-blue-600 text-white py-2 px-4 relative overflow-hidden">
    <div class="absolute inset-0 opacity-20">
      <div class="absolute inset-0" style="background-image: radial-gradient(circle at 25% 25%, rgba(255,255,255,0.1) 1px, transparent 1px); background-size: 20px 20px;"></div>
    </div>
    
    <div class="max-w-7xl mx-auto relative">
      <div class="flex items-center justify-center gap-2 text-center">
        <!-- Live indicator -->
        <div class="flex items-center gap-1.5">
          <div class="w-1.5 h-1.5 bg-red-400 rounded-full animate-ping"></div>
          <span class="text-xs font-medium">LIVE EVENT</span>
        </div>
        
        <!-- Event info -->
        <div class="hidden lg:block w-px h-4 bg-white/30"></div>
        <div class="text-xs lg:text-sm">
          <span class="font-semibold">Governance Summit 2025</span>
          <span class="hidden lg:inline"> - June 6, 2025 | Antwerp</span>
        </div>
        
        <!-- CTA -->
        <div class="hidden lg:block w-px h-4 bg-white/30"></div>
        <a 
          href="/governance-summit-summary" 
          class="inline-flex items-center gap-1 bg-white/20 hover:bg-white/30 px-2.5 py-0.5 rounded-full text-xs font-medium transition-colors"
        >
          <span>Access Program & Summaries</span>
          <svg class="w-2.5 h-2.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </div>
    </div>
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <!-- Logo -->
      <div class="flex items-center">
        <a href={currentLang === 'en' ? '/' : `/${currentLang}`} class="flex items-center group">
          <img 
  loading="lazy"
            src={whiteLogo ? "/logo_white.png" : "/logo.webp"}
            alt="Govrn Logo"
            class="h-8 transform transition-transform duration-200 group-hover:scale-105"
          />
        </a>
      </div>

      <!-- Desktop Navigation -->
      {!hideMenu && (
        <nav class="hidden md:flex items-center space-x-1">
        {
          navItems.map((item) => (
            <div class="relative group">
              <a
                href={item.href}
                class="px-4 py-2 text-gray-600 hover:text-gray-900 rounded-lg hover:bg-gray-50 transition-all duration-200 flex items-center"
              >
                {item.label}
                {item.hasMegaMenu && (
                  <svg
                    class="w-4 h-4 ml-1"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                )}
              </a>
              {item.hasMegaMenu && <MegaMenu isOpen={false} lang={currentLang}/>}
              </div>
            ))
          }
        </nav>
      )}

      <!-- Action Buttons -->
      <div class="flex items-center space-x-4">
        <a
          href="https://app.govrn.com"
          target="_blank"
          rel="noopener noreferrer"
          class="hidden md:inline-flex items-center px-4 py-2 text-sm font-medium rounded-lg text-primary hover:bg-primary/5 transition-all duration-200"
        >
          {buttonTexts.signIn}
        </a>
        <a
          href={buttonTexts.tryPath}
          class="hidden md:inline-flex items-center px-6 py-3 text-base font-medium rounded-lg text-white bg-primary hover:bg-primary/90 shadow-sm hover:shadow-md transition-all duration-200"
        >
          {buttonTexts.tryForFree}
        </a>

        <!-- Mobile Menu Button -->
        <button
          class="md:hidden p-2 rounded-lg hover:bg-gray-50 transition-colors duration-200"
          id="mobile-menu-button-main"
          aria-label="Toggle menu"
        >
          <svg
            class="h-6 w-6 text-gray-600"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Menu -->
  {!hideMenu && (
    <div
      class="hidden md:hidden border-t border-gray-100 bg-white/95 backdrop-blur-sm transition-all duration-300"
      id="mobile-menu"
    >
      <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 space-y-2">
        {
          navItems.map((item) => (
            <>
              <a
                href={item.href}
                class="block px-4 py-2 text-base font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50 rounded-lg transition-all duration-200"
              >
                {item.label}
              </a>
            </>
          ))
        }
        <div class="pt-4 space-y-2">
          <a
            href="https://app.govrn.com"
            target="_blank"
            rel="noopener noreferrer"
            class="block px-4 py-2 text-base font-medium text-gray-700 border-2 border-gray-200 hover:border-primary/20 hover:bg-gray-50 rounded-lg transition-all duration-200"
          >
            {buttonTexts.signIn}
          </a>
        </div>
      </nav>
    </div>
  )}
  <div class="md:hidden flex items-center fixed top-4 right-4 z-50 space-x-2">
    <button
      class="p-2 rounded-lg hover:bg-gray-50 transition-colors duration-200 bg-white"
      id="mobile-menu-button-fixed"
      aria-label="Toggle menu"
    >
      <svg
        class="h-6 w-6 text-gray-600"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
    </button>
    <a
      href={buttonTexts.tryPath}
      class="inline-flex items-center px-4 py-2 text-base font-medium text-white bg-primary hover:bg-primary/90 rounded-lg shadow-lg transition-all duration-200"
    >
      {buttonTexts.tryForFree}
    </a>
  </div>
  </header>

<script>
  function detectLanguage() {
    const path = window.location.pathname;
    return path.startsWith('/fr/') || path === '/fr' 
      ? 'fr' 
      : path.startsWith('/nl/') || path === '/nl' 
        ? 'nl' 
        : 'en';
  }

  // Update the header's data attribute with the correct language
  const header = document.querySelector('header');
  if (header) {
    console.log(detectLanguage());
    header.dataset.currentLang = detectLanguage();
  }

  // Get both mobile menu buttons
  const mobileMenuButtonMain = document.getElementById("mobile-menu-button-main");
  const mobileMenuButtonFixed = document.getElementById("mobile-menu-button-fixed");
  const mobileMenu = document.getElementById("mobile-menu");

  // Handle mobile menu toggle for both buttons
  function toggleMobileMenu() {
    mobileMenu?.classList.toggle("hidden");
    header?.classList.toggle("bg-white");
    header?.classList.toggle("bg-white/95");
  }

  mobileMenuButtonMain?.addEventListener("click", toggleMobileMenu);
  mobileMenuButtonFixed?.addEventListener("click", toggleMobileMenu);

  // Handle scroll behavior
  let lastScroll = 0;
  window.addEventListener("scroll", () => {
    const currentScroll = window.pageYOffset;

    if (currentScroll <= 0) {
      header?.classList.remove("shadow-lg");
      header?.classList.remove("-translate-y-full");
    }

    if (currentScroll > lastScroll && currentScroll > 80) {
      // Scrolling down & past header
      header?.classList.add("-translate-y-full");
    } else {
      // Scrolling up
      header?.classList.remove("-translate-y-full");
      header?.classList.add("shadow-lg");
    }

    lastScroll = currentScroll;
  });

  // Handle mega menu
  document.querySelectorAll('.group').forEach(group => {
    const megaMenu = group.querySelector('div[class*="absolute"]');
    if (megaMenu) {
      group.addEventListener('mouseenter', () => {
        megaMenu.classList.remove('opacity-0', 'invisible', '-translate-y-4');
        megaMenu.classList.add('opacity-100', 'visible', 'translate-y-0');
      });
      
      group.addEventListener('mouseleave', () => {
        megaMenu.classList.add('opacity-0', 'invisible', '-translate-y-4');
        megaMenu.classList.remove('opacity-100', 'visible', 'translate-y-0');
      });
    }
  });
</script>
