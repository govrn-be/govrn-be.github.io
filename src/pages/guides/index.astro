---
import Layout from '../../layouts/Layout.astro';

const guides = [
  {
    category: "Getting Started",
    icon: "🚀",
    description: "Essential guides for new users",
    guides: [
      {
        title: "Getting Started with Govrn as a Board Member",
        description: "Complete guide to setting up and using Govrn for your board",
        icon: "📚",
        readTime: "10 min",
        link: "/guides/board-member-getting-started"
      },
      {
        title: "Getting Started with Govrn as an Admin",
        description: "Complete guide to setting up and using Govrn for your board",
        icon: "📚",
        readTime: "10 min",
        link: "/guides/getting-started"
      },
      {
        title: "Authentication Guide",
        description: "Learn how to sign up, sign in, and manage your authentication",
        icon: "🔐",
        readTime: "5 min",
        link: "/guides/authentication"
      }
    ]
  },
  {
    category: "Account Management",
    icon: "👤",
    description: "Manage your account and profile",
    guides: [
      {
        title: "Profile Management",
        description: "Update your personal information, email, and settings",
        icon: "⚙️",
        readTime: "5 min",
        link: "/guides/profile-management"
      },
      {
        title: "Board Member Management",
        description: "Add and manage board members, roles, and permissions",
        icon: "👥",
        readTime: "8 min",
        link: "/guides/board-member-management"
      }
    ]
  },
  {
    category: "Technical Guides",
    icon: "🔧",
    description: "Technical documentation and setup guides",
    guides: [
      {
        title: "Domains and Protocols",
        description: "Understanding Govrn's domains and network requirements",
        icon: "🌐",
        readTime: "7 min",
        link: "/guides/domains-protocols"
      }
    ]
  }
];

// Flatten guides for search
const allGuides = guides.flatMap(category => 
  category.guides.map(guide => ({
    ...guide,
    category: category.category
  }))
);
---

<Layout title="Help Guides - Govrn Board Management Software">
  <main class="pt-24">
    <!-- Hero Section -->
    <section class="relative bg-gradient-to-br from-white to-gray-50 py-32 overflow-visible">
      <div class="absolute inset-0 z-0">
        <div class="absolute inset-0 bg-[radial-gradient(circle_at_top_right,rgba(57,153,222,0.1),transparent_50%)]"></div>
      </div>

      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
        <div class="text-center max-w-3xl mx-auto">
          <div class="inline-flex items-center rounded-full px-4 py-1 text-sm font-medium bg-primary/10 text-primary mb-8">
            Help Center
          </div>
          <h1 class="text-5xl font-extrabold text-gray-900 tracking-tight mb-8">
            How can we
            <span class="bg-clip-text text-transparent bg-gradient-to-r from-primary to-blue-600">
              help you?
            </span>
          </h1>
          <p class="text-xl text-gray-600 leading-relaxed mb-12">
            Find step-by-step guides and tutorials to help you make the most of Govrn.
          </p>

          <!-- Search container with high z-index -->
          <div class="max-w-2xl mx-auto relative z-[100]">
            <div class="relative flex items-center">
              <div class="absolute inset-y-0 left-4 flex items-center pointer-events-none">
                <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                </svg>
              </div>
              <input
                type="text"
                id="search-guides"
                placeholder="Search guides..."
                class="w-full px-6 py-4 pl-14 text-lg rounded-xl border border-gray-300 focus:ring-2 focus:ring-primary focus:border-primary"
                autocomplete="off"
              />
            </div>

            <!-- Search Results Dropdown -->
            <div 
              id="search-results"
              class="absolute left-0 right-0 top-full mt-2 bg-white rounded-xl shadow-xl border border-gray-100 divide-y divide-gray-100 max-h-96 overflow-y-auto hidden"
              style="position: absolute; z-index: 9999;"
            >
              <!-- Results will be populated by JavaScript -->
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Guides Grid -->
    <section class="py-20 bg-white">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="space-y-32">
          {guides.map(category => (
            <div>
              <div class="flex items-center space-x-4 mb-12">
                <div class="text-4xl">{category.icon}</div>
                <div>
                  <h2 class="text-2xl font-bold text-gray-900">{category.category}</h2>
                  <p class="text-gray-600 mt-2">{category.description}</p>
                </div>
              </div>

              <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
                {category.guides.map(guide => (
                  <a
                    href={guide.link}
                    class="group bg-white rounded-xl p-6 shadow-sm hover:shadow-lg transition-all duration-300 border border-gray-100"
                  >
                    <div class="flex items-center space-x-4 mb-4">
                      <div class="w-12 h-12 bg-primary/10 rounded-xl flex items-center justify-center text-2xl group-hover:scale-110 transition-transform">
                        {guide.icon}
                      </div>
                      <div class="text-sm text-primary font-medium">
                        {guide.readTime} read
                      </div>
                    </div>
                    <h3 class="text-xl font-bold text-gray-900 mb-2 group-hover:text-primary transition-colors">
                      {guide.title}
                    </h3>
                    <p class="text-gray-600">{guide.description}</p>
                    <div class="mt-4 inline-flex items-center text-primary group-hover:translate-x-2 transition-transform">
                      Read Guide
                      <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                      </svg>
                    </div>
                  </a>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Can't Find Help Section -->
    <section class="py-20 bg-gray-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="bg-white rounded-2xl p-12 shadow-sm border border-gray-100">
          <div class="max-w-2xl mx-auto text-center">
            <h2 class="text-3xl font-bold text-gray-900 mb-4">
              Can't Find What You're Looking For?
            </h2>
            <p class="text-xl text-gray-600 mb-8">
              Our support team is here to help you with any questions you may have.
            </p>
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
              <a
                href="/contact"
                class="inline-flex items-center px-8 py-4 text-lg font-medium rounded-xl text-white bg-primary hover:bg-primary/90 shadow-lg hover:shadow-xl transition-all duration-300"
              >
                Contact Support
              </a>
              <a
                href="/request-demo"
                class="inline-flex items-center px-8 py-4 text-lg font-medium rounded-xl text-gray-900 bg-white border-2 border-gray-200 hover:border-primary/20 hover:bg-gray-50 transition-colors duration-200"
              >
                Request a Demo
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <script define:vars={{ allGuides }}>
    const searchInput = document.getElementById('search-guides');
    const searchResults = document.getElementById('search-results');

    if (searchInput && searchResults) {
      // Show/hide dropdown based on focus
      searchInput.addEventListener('focus', () => {
        searchResults.classList.remove('hidden');
      });

      // Close dropdown when clicking outside
      document.addEventListener('click', (e) => {
        if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
          searchResults.classList.add('hidden');
        }
      });

      // Handle search input
      searchInput.addEventListener('input', (e) => {
        const searchTerm = searchInput.value.toLowerCase();
        
        if (searchTerm.length === 0) {
          searchResults.classList.add('hidden');
          return;
        }

        // Filter guides based on search term
        const filteredGuides = allGuides.filter(guide => 
          guide.title.toLowerCase().includes(searchTerm) ||
          guide.description.toLowerCase().includes(searchTerm)
        );

        // Update dropdown content
        searchResults.innerHTML = filteredGuides.length > 0
          ? filteredGuides.map(guide => `
              <a 
                href="${guide.link}"
                class="block p-4 hover:bg-gray-50 transition-colors"
              >
                <div class="flex items-start space-x-3">
                  <div class="flex-shrink-0 w-8 h-8 bg-primary/10 rounded-lg flex items-center justify-center text-xl">
                    ${guide.icon}
                  </div>
                  <div>
                    <h4 class="font-medium text-gray-900">${guide.title}</h4>
                    <p class="text-sm text-gray-500">${guide.description}</p>
                    <div class="flex items-center space-x-3 mt-1">
                      <span class="text-xs text-primary">${guide.readTime}</span>
                      <span class="text-xs text-gray-400">${guide.category}</span>
                    </div>
                  </div>
                </div>
              </a>
            `).join('')
          : `<div class="p-4 text-gray-500 text-center">No guides found</div>`;

        searchResults.classList.remove('hidden');
      });

      // Handle keyboard navigation
      searchInput.addEventListener('keydown', (e) => {
        const items = searchResults.querySelectorAll('a');
        const currentIndex = Array.from(items).findIndex(item => item === document.activeElement);

        switch (e.key) {
          case 'ArrowDown':
            e.preventDefault();
            if (currentIndex < items.length - 1) {
              items[currentIndex + 1].focus();
            }
            break;
          case 'ArrowUp':
            e.preventDefault();
            if (currentIndex > 0) {
              items[currentIndex - 1].focus();
            }
            break;
          case 'Escape':
            searchResults.classList.add('hidden');
            searchInput.blur();
            break;
        }
      });
    }
  </script>
</Layout>