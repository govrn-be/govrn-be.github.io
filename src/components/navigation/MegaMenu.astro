---
import IndustriesMenu from './menus/IndustriesMenu.astro';
import RolesMenu from './menus/RolesMenu.astro';
import RegionsMenu from './menus/RegionsMenu.astro';

interface Props {
  isOpen: boolean;
  lang: string;
}

const { isOpen, lang="en" } = Astro.props;

const texts = {
  en: {
    industries: "Industries",
    roles: "Roles",
    regions: "Regions"
  },
  fr: {
    industries: "Industries",
    roles: "Rôles",
    regions: "Régions"
  },
  nl: {
    industries: "Industrieën",
    roles: "Rollen",
    regions: "Regio's"
  }
}[lang];

const industries = {
  en: [
    {
      name: "Financial Services",
      icon: "🏦", 
      description: "Banking, Insurance, and Investment firms",
      href: "/industries/financial-services",
    },
    {
      name: "Healthcare",
      icon: "🏥",
      description: "Hospitals, Medical Devices, and Healthcare providers", 
      href: "/industries/healthcare",
    },
    {
      name: "Real Estate",
      icon: "🏢",
      description: "Property Investment and Management",
      href: "/industries/real-estate",
    }
  ],
  fr: [
    {
      name: "Services Financiers",
      icon: "🏦",
      description: "Banque, Assurance et Sociétés d'investissement",
      href: "/fr/industries/financial-services",
    },
    {
      name: "Santé",
      icon: "🏥", 
      description: "Hôpitaux, Dispositifs médicaux et Prestataires de soins",
      href: "/fr/industries/healthcare",
    },
    {
      name: "Immobilier",
      icon: "🏢",
      description: "Investissement et Gestion immobilière",
      href: "/fr/industries/real-estate", 
    }
  ],
  nl: [
    {
      name: "Financiële Diensten",
      icon: "🏦",
      description: "Bank-, Verzekerings- en Beleggingsbedrijven",
      href: "/nl/industries/financial-services",
    },
    {
      name: "Gezondheidszorg",
      icon: "🏥",
      description: "Ziekenhuizen, Medische apparatuur en Zorgverleners",
      href: "/nl/industries/healthcare",
    },
    {
      name: "Vastgoed",
      icon: "🏢", 
      description: "Vastgoedinvestering en -beheer",
      href: "/nl/industries/real-estate",
    }
  ]
}[lang];

const regions = {
  en: [
    {
      name: "Saudi Arabia - Vision 2030",
      icon: "🇸🇦",
      description: "CMA Corporate Governance & Economic Diversification",
      href: "/regions/saudi-vision-2030",
    }
  ],
  fr: [
    {
      name: "Arabie Saoudite - Vision 2030",
      icon: "🇸🇦",
      description: "Gouvernance d'entreprise CMA et diversification économique",
      href: "/regions/saudi-vision-2030",
    }
  ],
  nl: [
    {
      name: "Saoedi-Arabië - Vision 2030",
      icon: "🇸🇦",
      description: "CMA Corporate Governance en economische diversificatie",
      href: "/regions/saudi-vision-2030",
    }
  ]
}[lang];
---

<div 
  class={`absolute top-[calc(100%+1rem)] left-1/2 transform -translate-x-1/2 bg-white/95 backdrop-blur-sm shadow-xl border-t border-gray-100 transition-all duration-300 z-50 ${
    isOpen ? 'opacity-100 visible translate-y-0' : 'opacity-0 invisible -translate-y-4'
  } overflow-hidden`}
  style="min-width: 60vw;" >
  <div class="w-full mx-auto px-2 sm:px-4 lg:px-4 py-12">
    <div class="grid lg:grid-cols-5 gap-4"> <!-- Expanded to 5 columns for a wider layout -->
      
      <!-- Primary Navigation -->
      <div class="w-full space-y-2">
        <div class="space-y-2">
          <button class="w-full text-left px-2 py-3 rounded-lg hover:bg-gray-50 text-gray-900 font-medium flex items-center justify-between group/nav" data-section="industries">
            {texts.industries}
            <svg class="w-5 h-5 text-gray-400 group-hover/nav:text-primary transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
          <button class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 text-gray-900 font-medium flex items-center justify-between group/nav" data-section="roles">
            {texts.roles}
            <svg class="w-5 h-5 text-gray-400 group-hover/nav:text-primary transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
          <button class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 text-gray-900 font-medium flex items-center justify-between group/nav" data-section="regions">
            {texts.regions}
            <svg class="w-5 h-5 text-gray-400 group-hover/nav:text-primary transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
        </div>
      </div>

      <!-- Content Sections -->
      <div class="lg:col-span-4"> <!-- Increased the content area width -->
        <div id="industries-content" class="hidden">
          <IndustriesMenu industries={industries} />
        </div>
        <div id="roles-content" class="hidden">
          <RolesMenu />
        </div>
        <div id="regions-content" class="hidden">
          <RegionsMenu regions={regions} />
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function initializeMegaMenu() {
    const navButtons = document.querySelectorAll('button[data-section]');
    const contentSections = {
      industries: document.getElementById('industries-content'),
      roles: document.getElementById('roles-content'),
      regions: document.getElementById('regions-content')
    };

    // Show industries by default
    contentSections.industries?.classList.remove('hidden');

    navButtons.forEach(button => {
      button.addEventListener('mouseenter', () => {
        const section = button.getAttribute('data-section');
        if (section) {
          // Hide all sections
          Object.values(contentSections).forEach(content => {
            content?.classList.add('hidden');
          });
          // Show selected section
          contentSections[section]?.classList.remove('hidden');
        }
      });
    });
  }

  // Initialize when the DOM is ready
  document.addEventListener('astro:page-load', initializeMegaMenu);
  initializeMegaMenu();
</script>
